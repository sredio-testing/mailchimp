{{>licenseInfo}}
var axios = require('axios');

var axiosInstance = axios.create({
  timeout: 300000 // 300s
});


{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}{{#-first}}var {{baseName}} = require('./api/{{classname}}');
{{/-first}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
var exports = function (apiKey = '') {
  this.basePath = '{{{basePath}}}';
  this.apiKey = apiKey;{{#apiInfo}}{{#apis}}{{#-first}}{{#operations}}{{#operation}}{{#-first}}
  this.defaultOutputFormat = '';

  this.formatList = ['json', 'xml', 'php', 'yaml'];
  this.contentTypes = [{{#consumes}}'{{{mediaType}}}'{{#hasMore}}, {{/hasMore}}{{/consumes}}];
  this.accepts = [{{#produces}}
    '{{{mediaType}}}'{{#hasMore}}, {{/hasMore}}{{/produces}}
  ];{{/-first}}{{/operation}}{{/operations}}{{/-first}}{{/apis}}{{/apiInfo}}

  this.requestConfig = {
    headers: {
      'User-Agent': 'Transactional-JS/{{{projectVersion}}}',
    },
  };

  // API Routes{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}{{#-first}}
  this.{{#tags}}{{{name}}}{{/tags}} = new {{baseName}}(this);{{/-first}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
};

// HTTP POST request helper
exports.prototype.post = function post(path, body = {}) {
  var _this = this;
  var url = _this.basePath + path;

  // apply API key to the request
  body.key = _this.apiKey;

  // apply response format modifier
  var formatList = _this.formatList;
  var useDefaultOutputFormat = true;

  if (typeof body.outputFormat === 'string') {
    var format = body.outputFormat.toLowerCase();
    if (formatList.indexOf(format) !== -1) {
        url = url + '.' + format;
        delete body.outputFormat;
        useDefaultOutputFormat = false;
    }
  }

  // or use the default response format
  var defaultOutputFormat = _this.defaultOutputFormat;
  if (useDefaultOutputFormat && formatList.indexOf(defaultOutputFormat) !== -1) {
    url = url + '.' + defaultOutputFormat;
  }

  return axiosInstance
    .post(url, body, _this.requestConfig)
    .then(function (response) {
      return response.data;
    })
    .catch(function (error) {
      return error;
    })
};

// Updates the default HTTP request response format (json, xml, php, yaml)
exports.prototype.setDefaultOutputFormat = function (outputFormat) {
  var _this = this;
  if (_this.formatList.indexOf(outputFormat) !== -1) {
    _this.defaultOutputFormat = outputFormat;
  }
};

exports.prototype.setDefaultTimeoutMs = function (timeoutMs) {
  axiosInstance.defaults.timeout = timeoutMs;
}

/**
 * @param {Object} headers Add header to request. Example: { 'User-Agent': 'custom-value' } 
 */
exports.prototype.setRequestHeaders = function (headers) {
  var _this = this;
  _this.requestConfig.headers = Object.assign(_this.requestConfig.headers, headers);
};

// The default API client implementation.
exports.instance = function (apiKey) {
  return new exports(apiKey);
};

module.exports = exports;
